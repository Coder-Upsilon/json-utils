{
  "nav": {
    "home": "Home",
    "jsonFilter": "JSONPath Filter",
    "formatConvert": "Format Converter",
    "schema": "Schema Detector",
    "about": "About"
  },
  "header": {
    "title": "JSON Utils",
    "subtitle": {
      "home": "Format, Validate, Convert & Fix your JSON data",
      "jsonFilter": "Filter JSON with JSONPath expressions",
      "formatConvert": "Convert JSON to YAML, XML and other formats",
      "schema": "Detect schema from JSON data automatically",
      "about": "About our JSON processing tools"
    }
  },
  "controls": {
    "formatConversion": "Format Conversion",
    "toYaml": "To YAML",
    "toXml": "To XML",
    "quickStart": "Quick Start",
    "loadSample": "Load Sample",
    "input": "Input",
    "schema": "Schema",
    "output": "Output",
    "clear": "Clear",
    "inferSchema": "Infer Schema",
    "copy": "Copy",
    "download": "Download",
    "copyToInput": "Copy to Input"
  },
  "editor": {
    "inputJson": "Input JSON",
    "parseString": "Parse String",
    "output": "Output",
    "schema": "Inferred Schema",
    "pretty": "Pretty",
    "minify": "Minify",
    "stringify": "Stringify",
    "clearInput": "Clear input area",
    "copyToInput": "Copy output back to input for further processing",
    "copyToClipboard": "Copy output to clipboard",
    "downloadFile": "Download output as file",
    "placeholder": "Paste your JSON here...",
    "inputPlaceholder": "Paste your JSON here...",
    "schemaPlaceholder": "Schema will appear here after inference..."
  },
  "meta": {
    "index": {
      "title": "JSON Utils - Free Online JSON Formatter, Validator, Schema Detector & JSONPath Filter",
      "description": "Free professional JSON Utils toolkit. Format, validate, minify, repair JSON data, detect schemas automatically, and filter with JSONPath. Real-time syntax highlighting with auto-error detection. 100% client-side processing ensures your data privacy. Perfect for developers, API testing, data analysis, and schema generation.",
      "keywords": "json utils, JSON formatter, JSON validator, JSON minifier, JSON beautifier, online JSON editor, JSON syntax checker, fix JSON errors, JSON repair tool, pretty print JSON, validate JSON online, JSON parser, free JSON tools, JSON debugging, API testing, developer tools, JSON schema detector, JSONPath filter"
    },
    "jsonfilter": {
      "title": "JSONPath Filter - Query & Extract JSON Data Online | JSON Utils",
      "description": "Advanced JSONPath filter for querying and extracting data from complex JSON structures. Interactive JSONPath editor with comprehensive syntax guide, live examples, and real-time results. Support for wildcards, recursive descent, filter expressions, and array operations. Ideal for API response analysis, data extraction, and JSON data manipulation. 100% free JSON Utils tool.",
      "keywords": "jsonpath filter, JSONPath query, JSON data extraction, JSONPath expressions, filter JSON online, JSONPath syntax, JSON query tool, extract JSON values, nested JSON query, API response filter, JSON path selector, advanced JSON filtering, JSONPath wildcards, recursive JSON search, json utils, jsonpath online, query json data"
    },
    "formatconvert": {
      "title": "JSON Format Converter - Convert JSON ↔ YAML ↔ XML ↔ CSV | JSON Utils",
      "description": "Free multi-format converter with real-time conversion. Convert between JSON, YAML, XML, and CSV instantly. Automatic validation and error detection. Syntax highlighting for all formats. 100% client-side processing protects your data privacy. Perfect for data transformation and API integration.",
      "keywords": "JSON converter, YAML converter, XML converter, CSV converter, JSON to YAML, JSON to XML, JSON to CSV, YAML to JSON, XML to JSON, CSV to JSON, format converter, data transformation, file converter, multi-format converter, convert JSON online"
    },
    "schema": {
      "title": "JSON Schema Detector - Automatic Schema Generation & Inference | JSON Utils",
      "description": "Free JSON Schema detector automatically generates schemas from JSON data. Detect data types, structures, and patterns instantly. Supports simple TypeScript-like format and standard JSON Schema draft-07. Real-time schema inference with dictionary pattern detection. Perfect for API documentation, data validation, and schema design. 100% free JSON Utils tool.",
      "keywords": "json schema detector, schema detect, JSON schema generator, infer JSON schema, automatic schema generation, JSON schema inference, detect JSON schema, generate schema from JSON, JSON to schema, schema validation, JSON schema draft-07, TypeScript schema, json utils, schema detection tool, API schema generator"
    },
    "about": {
      "title": "About JSON Utils - Privacy-First Online JSON Processing Tools",
      "description": "Discover JSON Utils - the leading privacy-focused online JSON processing platform. Learn about our client-side processing, security features, and comprehensive JSON tools for developers, analysts, and students.",
      "keywords": "JSON Utils about, privacy-focused JSON tools, client-side JSON processing, secure JSON formatter, JSON tools for developers, JSON processing platform, online JSON utilities, JSON tool features, JSON converter privacy, developer tools online"
    }
  },
  "languageSwitcher": {
    "label": "Language",
    "english": "English",
    "chinese": "中文"
  },
  "about": {
    "title": "About JSON Utils",
    "intro": "JSON Utils is a comprehensive, free online tool designed to help developers, data analysts, and anyone working with JSON data to format, validate, convert, and fix their JSON files quickly and efficiently.",
    "keyFeatures": "Key Features",
    "features": {
      "prettyPrint": {
        "title": "Pretty Print & Minify",
        "description": "Format your JSON for readability or minify it to reduce file size. Perfect for debugging and optimization."
      },
      "validation": {
        "title": "JSON Validation",
        "description": "Instantly validate your JSON syntax and identify errors with detailed error messages and line numbers."
      },
      "filter": {
        "title": "JSON Filter & Query",
        "description": "Filter and extract specific data from JSON using powerful JSONPath expressions. Interactive query tool with syntax guide."
      },
      "conversion": {
        "title": "Format Conversion",
        "description": "Convert JSON to YAML, XML, or other formats. Also stringify and parse JSON strings effortlessly."
      },
      "repair": {
        "title": "JSON Repair",
        "description": "Automatically fix common JSON syntax errors like missing quotes, trailing commas, and malformed structures."
      },
      "schema": {
        "title": "Schema Detector",
        "description": "Automatically detect and generate schemas from JSON data. Supports both simple TypeScript-like format and standard JSON Schema."
      },
      "querying": {
        "title": "Advanced Querying",
        "description": "Use JSONPath expressions to search, filter, and extract nested data with complex conditions and array operations."
      }
    },
    "privacy": {
      "title": "Privacy & Security",
      "clientSide": {
        "title": "Client-Side Processing",
        "description": "All JSON processing happens directly in your browser. Your data never leaves your device, ensuring complete privacy and security."
      },
      "fast": {
        "title": "Fast & Offline",
        "description": "No server requests means lightning-fast processing and the ability to work offline once the page is loaded."
      },
      "noStorage": {
        "title": "No Data Storage",
        "description": "We don't store, log, or transmit any of your JSON data. What you process stays with you."
      }
    },
    "whoCanUse": {
      "title": "Who Can Use JSON Utils?",
      "developers": "Debug API responses, format configuration files, validate JSON schemas, and filter data with JSONPath queries",
      "analysts": "Extract specific data points from complex JSON structures, clean and convert data formats for analysis and reporting",
      "sysAdmins": "Manage configuration files, troubleshoot JSON-based configs, and query log files with JSONPath expressions",
      "students": "Learn JSON syntax, practice data manipulation, and understand JSONPath query language",
      "apiTesters": "Validate and format API request/response payloads, extract test data using advanced filtering",
      "devOps": "Process configuration files, extract deployment data, and automate JSON data transformations"
    }
  },
  "jsonfilter": {
    "jsonData": "JSON Data:",
    "jsonPathExpression": "JSONPath Expression:",
    "jsonPathPlaceholder": "e.g., $.store.book[*].title",
    "jsonPathGuide": "JSONPath Guide",
    "openGuide": "Open JSONPath Guide",
    "filterJson": "Filter JSON",
    "clear": "Clear",
    "loadExample": "Load Example",
    "filteredResult": "Filtered Result:",
    "filteredPlaceholder": "Filtered JSON will appear here...",
    "clearInput": "Clear input area",
    "copyOutput": "Copy output to clipboard",
    "downloadOutput": "Download output as file",
    "guide": {
      "title": "JSONPath Guide",
      "basicSyntax": "Basic Syntax",
      "commonExamples": "Common Examples",
      "filterOperators": "Filter Operators",
      "syntax": {
        "root": "Root node",
        "current": "Current node",
        "child": "Child operator",
        "recursive": "Recursive descent",
        "wildcard": "Wildcard",
        "subscript": "Subscript operator",
        "union": "Union operator",
        "slice": "Array slice",
        "filter": "Filter expression"
      },
      "examples": {
        "rootObject": "Root object",
        "allBooks": "All books",
        "firstBook": "First book",
        "lastBook": "Last book",
        "firstTwo": "First two books",
        "allTitles": "All book titles",
        "allAuthors": "All authors",
        "booksUnder10": "Books under $10",
        "booksOver10": "Books over $10",
        "fictionOnly": "Fiction books only",
        "allAuthorsRecursive": "All authors (recursive)",
        "allPrices": "All prices in store",
        "firstSecond": "First and second books",
        "allChildren": "All direct children of store"
      },
      "operators": {
        "equal": "Equal to",
        "notEqual": "Not equal to",
        "lessThan": "Less than",
        "lessEqual": "Less than or equal",
        "greaterThan": "Greater than",
        "greaterEqual": "Greater than or equal",
        "regex": "Regex match"
      }
    }
  },
  "formatconvert": {
    "input": "Input",
    "output": "Output",
    "format": "Format",
    "convert": "Convert",
    "loadSample": "Load Sample",
    "clearInput": "Clear input area",
    "copyToInput": "Copy output back to input for further processing",
    "copyToClipboard": "Copy output to clipboard",
    "downloadFile": "Download output as file",
    "placeholder": "Paste your data here..."
  },
  "schema": {
    "format": {
      "simplified": "Simple",
      "jsonSchema": "JSON Schema"
    },
    "whatIs": {
      "title": "What is JSON Schema Inference?",
      "description": "JSON Schema Inference automatically analyzes your JSON data and generates a schema showing data types, enum values, and structure. Choose between a simplified TypeScript-like format for easy reading, or standard JSON Schema for validation and documentation."
    },
    "examples": {
      "title": "Schema Examples",
      "basic": {
        "title": "Basic Types",
        "description": "Detects String, Number, Integer, Boolean, and null types automatically"
      },
      "enum": {
        "title": "Enum Detection",
        "description": "Shows possible values when a field has limited options (e.g., 'active | inactive | pending')"
      },
      "array": {
        "title": "Array Analysis",
        "description": "Analyzes array contents and shows element types or schemas for complex arrays"
      },
      "nested": {
        "title": "Nested Objects",
        "description": "Handles deeply nested structures and shows complete object hierarchies"
      }
    },
    "features": {
      "title": "Key Features",
      "types": {
        "title": "Type Detection",
        "description": "Automatically identifies data types: String, Number, Integer, Boolean, null, Object, Array"
      },
      "enums": {
        "title": "Enum Inference",
        "description": "Detects fields with limited value sets (up to 10 unique values) and displays them as enums"
      },
      "arrays": {
        "title": "Array Schemas",
        "description": "Analyzes array elements and infers schemas for both primitive and complex arrays"
      },
      "nested": {
        "title": "Nested Structure Support",
        "description": "Handles arbitrarily nested objects and arrays, showing complete data structure"
      }
    }
  }
}
