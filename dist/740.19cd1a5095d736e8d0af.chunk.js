"use strict";(self.webpackChunkjson_utils=self.webpackChunkjson_utils||[]).push([[740],{695:(t,s,e)=>{e.d(s,{i:()=>n});var i=e(237);e(792),e(923),e(948),e(274),e(795),e(402),e(347),e(974);class n{static initializeEditor(t,s={}){const e=document.getElementById(t);if(!e)return console.error(`Textarea with id "${t}" not found`),null;if(e.CodeMirror){console.warn(`CodeMirror already initialized on textarea "${t}", returning existing instance`);const s=e.CodeMirror;return this.instances.set(t,s),s}const n=this.instances.get(t);if(n)return console.warn(`CodeMirror instance already exists for "${t}", returning existing instance`),n;try{const n={mode:"application/json",theme:"material-darker",lineNumbers:!0,lineWrapping:!0,readOnly:!1,indentUnit:2,tabSize:2,foldGutter:!0,gutters:["CodeMirror-linenumbers","CodeMirror-foldgutter"],matchBrackets:!0,extraKeys:{"Ctrl-Q":t=>t.foldCode(t.getCursor()),"Cmd-Q":t=>t.foldCode(t.getCursor())},...s},a=i.fromTextArea(e,n);return this.instances.set(t,a),a}catch(s){return console.error(`Failed to initialize CodeMirror on textarea "${t}":`,s),null}}static getInstance(t){return this.instances.get(t)||null}static cleanup(t){const s=this.instances.get(t);if(s)try{s.toTextArea(),this.instances.delete(t)}catch(s){console.error(`Error cleaning up CodeMirror instance for "${t}":`,s)}}static cleanupAll(){for(const[t]of this.instances)this.cleanup(t)}static hasInstance(t){const s=document.getElementById(t);return!(!s||!s.CodeMirror)||this.instances.has(t)}}n.instances=new Map},837:(t,s,e)=>{e.d(s,{JSONUtils:()=>a});var i=e(472),n=e(695);class a{constructor(){this.currentOutputType="json",this.lastValidJSON=null,this.initializeElements(),this.initializeEditors(),this.attachEventListeners()}initializeElements(){this.elements={clearBtn:this.getElementById("clearBtn"),loadSampleBtn:this.getElementById("loadSampleBtn"),parseStringToggle:this.getElementById("parseStringToggle"),copyToInputBtn:this.getElementById("copyToInputBtn"),copyBtn:this.getElementById("copyBtn"),downloadBtn:this.getElementById("downloadBtn"),inputStatus:this.getElementById("inputStatus"),outputStatus:this.getElementById("outputStatus"),formatRadios:document.querySelectorAll('input[name="outputFormat"]')}}getElementById(t){const s=document.getElementById(t);if(!s)throw new Error(`Element with id "${t}" not found`);return s}getElementBySelector(t){const s=document.querySelector(t);if(!s)throw new Error(`Element with selector "${t}" not found`);return s}initializeEditors(){const t=n.i.initializeEditor("jsonInput",{mode:"application/json",readOnly:!1});if(!t)throw new Error("Failed to initialize input editor");this.inputEditor=t,this.inputEditor.setOption("readOnly",!1),this.inputEditor.on("change",()=>{this.debounce(()=>this.validateInput(),500)()});const s=n.i.initializeEditor("output",{mode:"application/json",readOnly:!0});if(!s)throw new Error("Failed to initialize output editor");this.outputEditor=s}attachEventListeners(){this.elements.clearBtn.addEventListener("click",()=>this.clearInput()),this.elements.loadSampleBtn.addEventListener("click",()=>this.loadSample()),this.elements.parseStringToggle.addEventListener("change",()=>this.handleParseStringToggle()),this.elements.copyToInputBtn.addEventListener("click",()=>this.copyToInput()),this.elements.copyBtn.addEventListener("click",()=>this.copyOutput()),this.elements.downloadBtn.addEventListener("click",()=>this.downloadOutput()),this.elements.formatRadios.forEach(t=>{t.addEventListener("change",()=>this.handleFormatChange())}),this.elements.inputStatus.addEventListener("click",t=>{this.elements.inputStatus.classList.contains("error")&&(t.stopPropagation(),this.toggleErrorExpansion(this.elements.inputStatus))})}handleParseStringToggle(){if(this.inputEditor.getValue().trim())if(this.validateInput(),this.elements.parseStringToggle.checked&&this.lastValidJSON){const t=JSON.stringify(this.lastValidJSON,null,2);this.displayOutput(t,"application/json"),this.currentOutputType="json",this.showStatus(this.elements.outputStatus,"JSON string parsed","success")}else if(!this.elements.parseStringToggle.checked&&this.lastValidJSON){const t=JSON.stringify(this.lastValidJSON,null,2);this.displayOutput(t,"application/json"),this.currentOutputType="json",this.showStatus(this.elements.outputStatus,"Pretty printed","success")}}debounce(t,s){let e;return(...i)=>{clearTimeout(e),e=setTimeout(()=>{clearTimeout(e),t(...i)},s)}}clearInput(){this.inputEditor.setValue(""),this.clearStatus()}loadSample(){const t=JSON.stringify({name:"John Doe",age:30,city:"New York",hobbies:["reading","swimming","coding"],address:{street:"123 Main St",zipCode:"10001"},isActive:!0,balance:1250.5,spouse:null},null,2);this.inputEditor.setValue(t),this.validateInput()}validateInput(){const t=this.inputEditor.getValue().trim();if(!t)return this.clearStatus(),void(this.lastValidJSON=null);if(this.elements.parseStringToggle.checked)this.parseJSONStringForValidation(t);else try{this.lastValidJSON=JSON.parse(t),this.showStatus(this.elements.inputStatus,"Valid JSON","success"),this.applyCurrentFormat()}catch(s){const e=s instanceof Error?s.message:"Unknown error";this.attemptAutoFix(t,e)}}parseJSONStringForValidation(t){try{const s=JSON.parse(t);if("string"!=typeof s)return this.showStatus(this.elements.inputStatus,"Input must be a JSON string","error"),void(this.lastValidJSON=null);const e=JSON.parse(s);this.lastValidJSON=e,this.showStatus(this.elements.inputStatus,"Valid JSON string","success"),this.applyCurrentFormat()}catch(t){const s=t instanceof Error?t.message:"Unknown error";this.showStatus(this.elements.inputStatus,`Invalid JSON string: ${s}`,"error"),this.lastValidJSON=null}}attemptAutoFix(t,s){try{const e=this.customJSONRepair(t),i=JSON.parse(e);this.lastValidJSON=i,this.applyCurrentFormat(),this.showStatus(this.elements.inputStatus,`Fixed: ${s}`,"info"),this.showStatus(this.elements.outputStatus,"Fixed JSON displayed","success")}catch(e){try{const e=(0,i.m)(t),n=JSON.parse(e);this.lastValidJSON=n,this.applyCurrentFormat(),this.showStatus(this.elements.inputStatus,`Fixed: ${s}`,"info"),this.showStatus(this.elements.outputStatus,"Fixed JSON displayed","success")}catch(t){this.lastValidJSON=null,this.showStatus(this.elements.inputStatus,`Invalid JSON: ${s}`,"error")}}}handleFormatChange(){this.applyCurrentFormat()}applyCurrentFormat(){if(!this.lastValidJSON)return;const t=Array.from(this.elements.formatRadios).find(t=>t.checked)?.value;if("pretty"===t){const t=JSON.stringify(this.lastValidJSON,null,2);this.displayOutput(t,"application/json"),this.currentOutputType="json",this.showStatus(this.elements.outputStatus,"Formatted as Pretty","success")}else if("minify"===t){const t=JSON.stringify(this.lastValidJSON);this.displayOutput(t,"application/json"),this.currentOutputType="json",this.showStatus(this.elements.outputStatus,"Minified successfully","success")}else if("stringify"===t){const t=JSON.stringify(this.lastValidJSON),s=JSON.stringify(t);this.displayOutput(s,"text/plain"),this.currentOutputType="text",this.showStatus(this.elements.outputStatus,"Stringified successfully","success")}}analyzeJSON(t){const s=[],e=Array.isArray(t)?"Array":typeof t;if(s.push(`Type: ${e}`),Array.isArray(t))s.push(`Length: ${t.length} items`);else if("object"==typeof t&&null!==t){const e=Object.keys(t);s.push(`Properties: ${e.length}`),s.push(`Keys: ${e.join(", ")}`)}return s.push(`Size: ${JSON.stringify(t).length} characters`),s.join("\n")}fixJSON(){const t=this.inputEditor.getValue().trim();if(t)try{return JSON.parse(t),void this.showStatus(this.elements.outputStatus,"JSON is already valid!","info")}catch(s){try{const s=this.customJSONRepair(t),e=JSON.parse(s),i=JSON.stringify(e,null,2);return this.displayOutput(i,"application/json"),this.currentOutputType="json",void this.showStatus(this.elements.outputStatus,"JSON fixed successfully! Please verify the result.","success")}catch(s){try{const s=(0,i.m)(t),e=JSON.parse(s),n=JSON.stringify(e,null,2);this.displayOutput(n,"application/json"),this.currentOutputType="json",this.showStatus(this.elements.outputStatus,"JSON fixed successfully! Please verify the result.","success")}catch(t){const s=t instanceof Error?t.message:"Unknown error";this.showStatus(this.elements.outputStatus,`Could not auto-fix JSON: ${s}`,"error")}}}else this.showStatus(this.elements.outputStatus,"Please enter JSON data first","error")}stringifyJSON(){const t=this.inputEditor.getValue().trim();if(t)try{const s=JSON.parse(t),e=JSON.stringify(s),i=JSON.stringify(e);this.displayOutput(i,"text/plain"),this.currentOutputType="text",this.showStatus(this.elements.outputStatus,"JSON converted to string successfully","success")}catch(t){const s=t instanceof Error?t.message:"Unknown error";this.showStatus(this.elements.outputStatus,`Error stringifying JSON: ${s}`,"error")}else this.showStatus(this.elements.outputStatus,"Please enter JSON data first","error")}parseJSONString(){const t=this.inputEditor.getValue().trim();if(t)try{const s=JSON.parse(t);if("string"!=typeof s)return void this.showStatus(this.elements.outputStatus,"Input must be a JSON string (quoted string containing JSON)","error");const e=JSON.parse(s),i=JSON.stringify(e,null,2);this.displayOutput(i,"application/json"),this.currentOutputType="json",this.showStatus(this.elements.outputStatus,"JSON string parsed successfully","success")}catch(s){try{const s=(0,i.m)(t),e=JSON.parse(s);if("string"!=typeof e)return void this.showStatus(this.elements.outputStatus,"Input must be a JSON string (quoted string containing JSON)","error");const n=JSON.parse(e),a=JSON.stringify(n,null,2);this.displayOutput(a,"application/json"),this.currentOutputType="json",this.showStatus(this.elements.outputStatus,"Input repaired and JSON string parsed successfully! Please verify the result.","success")}catch(t){const e=s instanceof Error?s.message:"Unknown error";this.showStatus(this.elements.outputStatus,`Error parsing JSON string: ${e}`,"error")}}else this.showStatus(this.elements.outputStatus,"Please enter a JSON string first","error")}customJSONRepair(t){let s=t;return s=s.replace(/("[\w\s]+"):\s*"([^"]*?)\s+"([^"]+"):/g,'$1: "$2", "$3":'),s=s.replace(/("[\w\s]+"):\s*"([^"]*?)\s+("[\w\s]+"):/g,'$1: "$2", $3:'),s=s.replace(/'/g,'"'),s=s.replace(/([{,]\s*)([a-zA-Z_$][a-zA-Z0-9_$]*)\s*:/g,'$1"$2":'),s=s.replace(/,(\s*[}\]])/g,"$1"),s=s.replace(/("\s*)\s+("[\w\s]+"):/g,"$1, $2:"),s}copyToInput(){const t=this.outputEditor.getValue();t?(this.inputEditor.setValue(t),this.validateInput(),this.showStatus(this.elements.outputStatus,"Output copied to input!","success")):this.showStatus(this.elements.outputStatus,"No output to copy","error")}async copyOutput(){const t=this.outputEditor.getValue();if(t)try{await navigator.clipboard.writeText(t),this.showStatus(this.elements.outputStatus,"Output copied to clipboard!","success")}catch(s){const e=document.createElement("textarea");e.value=t,document.body.appendChild(e),e.select(),document.execCommand("copy"),document.body.removeChild(e),this.showStatus(this.elements.outputStatus,"Output copied to clipboard!","success")}else this.showStatus(this.elements.outputStatus,"No output to copy","error")}downloadOutput(){const t=this.outputEditor.getValue();if(!t)return void this.showStatus(this.elements.outputStatus,"No output to download","error");const s=`output.${{json:"json",text:"txt"}[this.currentOutputType]||"txt"}`,e=new Blob([t],{type:"text/plain"}),i=URL.createObjectURL(e),n=document.createElement("a");n.href=i,n.download=s,document.body.appendChild(n),n.click(),document.body.removeChild(n),URL.revokeObjectURL(i),this.showStatus(this.elements.outputStatus,`File downloaded as ${s}`,"success")}showStatus(t,s,e){t.innerHTML="",t.className=`status-inline ${e}`,"error"===e&&t.classList.add("collapsed");const i=document.createElement("span");i.className="error-content",i.textContent=s,t.appendChild(i)}toggleErrorExpansion(t){t.classList.contains("collapsed")?(t.classList.remove("collapsed"),t.classList.add("expanded")):t.classList.contains("expanded")&&(t.classList.remove("expanded"),t.classList.add("collapsed"))}clearStatus(){this.elements.inputStatus.textContent="",this.elements.inputStatus.className="status-inline",this.elements.outputStatus.textContent="",this.elements.outputStatus.className="status-inline"}displayOutput(t,s){this.outputEditor.setValue(t),this.outputEditor.setOption("mode",s)}}}}]);