"use strict";(self.webpackChunkjson_utils=self.webpackChunkjson_utils||[]).push([[740],{412:(t,e,s)=>{s.d(e,{p:()=>r});const i=s(683);class r{toJSONSchema(t){const e=i(t,{required:!0,arrays:{mode:"first"},strings:{detectFormat:!1},postProcessFnc:(t,e,s)=>("number"===t&&Number.isInteger(s)&&(e.type="integer"),e)});return this.enrichArraySchemas(e,t)}isDictionaryPattern(t){if(!t||"object"!=typeof t||Array.isArray(t))return!1;const e=Object.keys(t);if(e.length<2)return!1;const s=t[e[0]];if(!s||"object"!=typeof s||Array.isArray(s))return!1;const i=JSON.stringify(this.getValueSchema(s));for(let s=1;s<e.length;s++){const r=t[e[s]];if(!r||"object"!=typeof r||Array.isArray(r))return!1;if(JSON.stringify(this.getValueSchema(r))!==i)return!1}return!0}getValueSchema(t){if(null===t)return{type:"null"};if(Array.isArray(t))return{type:"array"};const e=typeof t;return"object"===e?{type:"object",keys:Object.keys(t).sort()}:{type:e}}enrichArraySchemas(t,e){if(!t||"object"!=typeof t)return t;if("object"===t.type&&t.properties&&this.isDictionaryPattern(e)){const t=e[Object.keys(e)[0]],s=i(t,{required:!0,strings:{detectFormat:!1}});return{type:"object",additionalProperties:this.enrichArraySchemas(s,t)}}if("array"===t.type&&t.items&&Array.isArray(e)&&e.length>0){if("object"==typeof e[0]&&null!==e[0]&&!Array.isArray(e[0])){const s=new Set,r={};for(const t of e)"object"==typeof t&&null!==t&&Object.keys(t).forEach(t=>s.add(t));for(const t of s){const s=e.filter(e=>"object"==typeof e&&null!==e&&t in e).map(e=>e[t]);if(s.length>0&&(r[t]=i(s[0],{required:!0,strings:{detectFormat:!1}}),e.some(e=>"object"==typeof e&&null!==e&&null===e[t]))){const e=r[t].type;r[t].type=Array.isArray(e)?[...e,"null"]:[e,"null"]}}t.items={type:"object",properties:r,required:Array.from(s)}}t.items&&(t.items=this.enrichArraySchemas(t.items,e[0]))}if("object"===t.type&&t.properties)for(const[s,i]of Object.entries(t.properties))e&&"object"==typeof e&&s in e&&(t.properties[s]=this.enrichArraySchemas(i,e[s]));return t}inferSchema(t){const e=this.toJSONSchema(t);return this.jsonSchemaToSimple(e)}jsonSchemaToSimple(t){if(!t||"object"!=typeof t)return"any";const e=t.type;if(Array.isArray(e))return e.map(t=>this.typeToSimple(t)).join(" | ");if("object"===e){if(t.additionalProperties&&!t.properties)return{"[key: string]":this.jsonSchemaToSimple(t.additionalProperties)};if(t.properties){const e={};for(const[s,i]of Object.entries(t.properties))e[s]=this.jsonSchemaToSimple(i);return e}return"Object"}if("array"===e&&t.items){const e=this.jsonSchemaToSimple(t.items);return"object"!=typeof e||Array.isArray(e)?`Array<${e}>`:[e]}return this.typeToSimple(e)}typeToSimple(t){switch(t){case"string":return"String";case"number":return"Number";case"integer":return"Integer";case"boolean":return"Boolean";case"null":return"null";case"object":return"Object";case"array":return"Array";default:return t}}formatSchema(t,e=2){return JSON.stringify(t,null,e)}}},695:(t,e,s)=>{s.d(e,{i:()=>r});var i=s(237);s(792),s(923),s(948),s(274),s(795),s(402),s(347),s(974);class r{static initializeEditor(t,e={}){const s=document.getElementById(t);if(!s)return console.error(`Textarea with id "${t}" not found`),null;if(s.CodeMirror){console.warn(`CodeMirror already initialized on textarea "${t}", returning existing instance`);const e=s.CodeMirror;return this.instances.set(t,e),e}const r=this.instances.get(t);if(r)return console.warn(`CodeMirror instance already exists for "${t}", returning existing instance`),r;try{const r={mode:"application/json",theme:"material-darker",lineNumbers:!0,lineWrapping:!0,readOnly:!1,indentUnit:2,tabSize:2,foldGutter:!0,gutters:["CodeMirror-linenumbers","CodeMirror-foldgutter"],matchBrackets:!0,extraKeys:{"Ctrl-Q":t=>t.foldCode(t.getCursor()),"Cmd-Q":t=>t.foldCode(t.getCursor())},...e},n=i.fromTextArea(s,r);return this.instances.set(t,n),n}catch(e){return console.error(`Failed to initialize CodeMirror on textarea "${t}":`,e),null}}static getInstance(t){return this.instances.get(t)||null}static cleanup(t){const e=this.instances.get(t);if(e)try{e.toTextArea(),this.instances.delete(t)}catch(e){console.error(`Error cleaning up CodeMirror instance for "${t}":`,e)}}static cleanupAll(){for(const[t]of this.instances)this.cleanup(t)}static hasInstance(t){const e=document.getElementById(t);return!(!e||!e.CodeMirror)||this.instances.has(t)}}r.instances=new Map},837:(t,e,s)=>{s.d(e,{JSONUtils:()=>a});var i=s(472),r=s(695),n=s(412);class a{constructor(){this.currentOutputType="json",this.lastValidJSON=null,this.initializeElements(),this.initializeEditors(),this.attachEventListeners()}initializeElements(){this.elements={clearBtn:this.getElementById("clearBtn"),loadSampleBtn:this.getElementById("loadSampleBtn"),parseStringToggle:this.getElementById("parseStringToggle"),copyToInputBtn:this.getElementById("copyToInputBtn"),copyBtn:this.getElementById("copyBtn"),downloadBtn:this.getElementById("downloadBtn"),inputStatus:this.getElementById("inputStatus"),outputStatus:this.getElementById("outputStatus"),formatRadios:document.querySelectorAll('input[name="outputFormat"]')}}getElementById(t){const e=document.getElementById(t);if(!e)throw new Error(`Element with id "${t}" not found`);return e}getElementBySelector(t){const e=document.querySelector(t);if(!e)throw new Error(`Element with selector "${t}" not found`);return e}initializeEditors(){const t=r.i.initializeEditor("jsonInput",{mode:"application/json",readOnly:!1});if(!t)throw new Error("Failed to initialize input editor");this.inputEditor=t,this.inputEditor.setOption("readOnly",!1),this.inputEditor.on("change",()=>{this.debounce(()=>this.validateInput(),500)()});const e=r.i.initializeEditor("output",{mode:"application/json",readOnly:!0});if(!e)throw new Error("Failed to initialize output editor");this.outputEditor=e}attachEventListeners(){this.elements.clearBtn.addEventListener("click",()=>this.clearInput()),this.elements.loadSampleBtn.addEventListener("click",()=>this.loadSample()),this.elements.parseStringToggle.addEventListener("change",()=>this.handleParseStringToggle()),this.elements.copyToInputBtn.addEventListener("click",()=>this.copyToInput()),this.elements.copyBtn.addEventListener("click",()=>this.copyOutput()),this.elements.downloadBtn.addEventListener("click",()=>this.downloadOutput()),this.elements.formatRadios.forEach(t=>{t.addEventListener("change",()=>this.handleFormatChange())}),this.elements.inputStatus.addEventListener("click",t=>{this.elements.inputStatus.classList.contains("error")&&(t.stopPropagation(),this.toggleErrorExpansion(this.elements.inputStatus))})}handleParseStringToggle(){if(this.inputEditor.getValue().trim())if(this.validateInput(),this.elements.parseStringToggle.checked&&this.lastValidJSON){const t=JSON.stringify(this.lastValidJSON,null,2);this.displayOutput(t,"application/json"),this.currentOutputType="json",this.showStatus(this.elements.outputStatus,"JSON string parsed","success")}else if(!this.elements.parseStringToggle.checked&&this.lastValidJSON){const t=JSON.stringify(this.lastValidJSON,null,2);this.displayOutput(t,"application/json"),this.currentOutputType="json",this.showStatus(this.elements.outputStatus,"Pretty printed","success")}}debounce(t,e){let s;return(...i)=>{clearTimeout(s),s=setTimeout(()=>{clearTimeout(s),t(...i)},e)}}clearInput(){this.inputEditor.setValue(""),this.clearStatus()}loadSample(){const t=JSON.stringify({name:"John Doe",age:30,city:"New York",hobbies:["reading","swimming","coding"],address:{street:"123 Main St",zipCode:"10001"},isActive:!0,balance:1250.5,spouse:null},null,2);this.inputEditor.setValue(t),this.validateInput()}validateInput(){const t=this.inputEditor.getValue().trim();if(!t)return this.clearStatus(),void(this.lastValidJSON=null);if(this.elements.parseStringToggle.checked)this.parseJSONStringForValidation(t);else try{this.lastValidJSON=JSON.parse(t),this.showStatus(this.elements.inputStatus,"Valid JSON","success"),this.applyCurrentFormat()}catch(e){const s=e instanceof Error?e.message:"Unknown error";this.attemptAutoFix(t,s)}}parseJSONStringForValidation(t){try{const e=JSON.parse(t);if("string"!=typeof e)return this.showStatus(this.elements.inputStatus,"Input must be a JSON string","error"),void(this.lastValidJSON=null);const s=JSON.parse(e);this.lastValidJSON=s,this.showStatus(this.elements.inputStatus,"Valid JSON string","success"),this.applyCurrentFormat()}catch(t){const e=t instanceof Error?t.message:"Unknown error";this.showStatus(this.elements.inputStatus,`Invalid JSON string: ${e}`,"error"),this.lastValidJSON=null}}attemptAutoFix(t,e){try{const s=this.customJSONRepair(t),i=JSON.parse(s);this.lastValidJSON=i,this.applyCurrentFormat(),this.showStatus(this.elements.inputStatus,`Fixed: ${e}`,"info"),this.showStatus(this.elements.outputStatus,"Fixed JSON displayed","success")}catch(s){try{const s=(0,i.m)(t),r=JSON.parse(s);this.lastValidJSON=r,this.applyCurrentFormat(),this.showStatus(this.elements.inputStatus,`Fixed: ${e}`,"info"),this.showStatus(this.elements.outputStatus,"Fixed JSON displayed","success")}catch(t){this.lastValidJSON=null,this.showStatus(this.elements.inputStatus,`Invalid JSON: ${e}`,"error")}}}handleFormatChange(){this.applyCurrentFormat()}applyCurrentFormat(){if(!this.lastValidJSON)return;const t=Array.from(this.elements.formatRadios).find(t=>t.checked)?.value;if("pretty"===t){const t=JSON.stringify(this.lastValidJSON,null,2);this.displayOutput(t,"application/json"),this.currentOutputType="json",this.showStatus(this.elements.outputStatus,"Formatted as Pretty","success")}else if("minify"===t){const t=JSON.stringify(this.lastValidJSON);this.displayOutput(t,"application/json"),this.currentOutputType="json",this.showStatus(this.elements.outputStatus,"Minified successfully","success")}else if("stringify"===t){const t=JSON.stringify(this.lastValidJSON),e=JSON.stringify(t);this.displayOutput(e,"text/plain"),this.currentOutputType="text",this.showStatus(this.elements.outputStatus,"Stringified successfully","success")}}analyzeJSON(t){const e=[],s=Array.isArray(t)?"Array":typeof t;if(e.push(`Type: ${s}`),Array.isArray(t))e.push(`Length: ${t.length} items`);else if("object"==typeof t&&null!==t){const s=Object.keys(t);e.push(`Properties: ${s.length}`),e.push(`Keys: ${s.join(", ")}`)}return e.push(`Size: ${JSON.stringify(t).length} characters`),e.join("\n")}fixJSON(){const t=this.inputEditor.getValue().trim();if(t)try{return JSON.parse(t),void this.showStatus(this.elements.outputStatus,"JSON is already valid!","info")}catch(e){try{const e=this.customJSONRepair(t),s=JSON.parse(e),i=JSON.stringify(s,null,2);return this.displayOutput(i,"application/json"),this.currentOutputType="json",void this.showStatus(this.elements.outputStatus,"JSON fixed successfully! Please verify the result.","success")}catch(e){try{const e=(0,i.m)(t),s=JSON.parse(e),r=JSON.stringify(s,null,2);this.displayOutput(r,"application/json"),this.currentOutputType="json",this.showStatus(this.elements.outputStatus,"JSON fixed successfully! Please verify the result.","success")}catch(t){const e=t instanceof Error?t.message:"Unknown error";this.showStatus(this.elements.outputStatus,`Could not auto-fix JSON: ${e}`,"error")}}}else this.showStatus(this.elements.outputStatus,"Please enter JSON data first","error")}stringifyJSON(){const t=this.inputEditor.getValue().trim();if(t)try{const e=JSON.parse(t),s=JSON.stringify(e),i=JSON.stringify(s);this.displayOutput(i,"text/plain"),this.currentOutputType="text",this.showStatus(this.elements.outputStatus,"JSON converted to string successfully","success")}catch(t){const e=t instanceof Error?t.message:"Unknown error";this.showStatus(this.elements.outputStatus,`Error stringifying JSON: ${e}`,"error")}else this.showStatus(this.elements.outputStatus,"Please enter JSON data first","error")}parseJSONString(){const t=this.inputEditor.getValue().trim();if(t)try{const e=JSON.parse(t);if("string"!=typeof e)return void this.showStatus(this.elements.outputStatus,"Input must be a JSON string (quoted string containing JSON)","error");const s=JSON.parse(e),i=JSON.stringify(s,null,2);this.displayOutput(i,"application/json"),this.currentOutputType="json",this.showStatus(this.elements.outputStatus,"JSON string parsed successfully","success")}catch(e){try{const e=(0,i.m)(t),s=JSON.parse(e);if("string"!=typeof s)return void this.showStatus(this.elements.outputStatus,"Input must be a JSON string (quoted string containing JSON)","error");const r=JSON.parse(s),n=JSON.stringify(r,null,2);this.displayOutput(n,"application/json"),this.currentOutputType="json",this.showStatus(this.elements.outputStatus,"Input repaired and JSON string parsed successfully! Please verify the result.","success")}catch(t){const s=e instanceof Error?e.message:"Unknown error";this.showStatus(this.elements.outputStatus,`Error parsing JSON string: ${s}`,"error")}}else this.showStatus(this.elements.outputStatus,"Please enter a JSON string first","error")}inferSchema(){if(this.lastValidJSON)try{const t=new n.p,e=t.inferSchema(this.lastValidJSON),s=t.formatSchema(e);this.displayOutput(s,"application/json"),this.currentOutputType="json",this.showStatus(this.elements.outputStatus,"Schema inferred successfully","success")}catch(t){const e=t instanceof Error?t.message:"Unknown error";this.showStatus(this.elements.outputStatus,`Error inferring schema: ${e}`,"error")}else this.showStatus(this.elements.outputStatus,"Please enter valid JSON first","error")}customJSONRepair(t){let e=t;return e=e.replace(/("[\w\s]+"):\s*"([^"]*?)\s+"([^"]+"):/g,'$1: "$2", "$3":'),e=e.replace(/("[\w\s]+"):\s*"([^"]*?)\s+("[\w\s]+"):/g,'$1: "$2", $3:'),e=e.replace(/'/g,'"'),e=e.replace(/([{,]\s*)([a-zA-Z_$][a-zA-Z0-9_$]*)\s*:/g,'$1"$2":'),e=e.replace(/,(\s*[}\]])/g,"$1"),e=e.replace(/("\s*)\s+("[\w\s]+"):/g,"$1, $2:"),e}copyToInput(){const t=this.outputEditor.getValue();t?(this.inputEditor.setValue(t),this.validateInput(),this.showStatus(this.elements.outputStatus,"Output copied to input!","success")):this.showStatus(this.elements.outputStatus,"No output to copy","error")}async copyOutput(){const t=this.outputEditor.getValue();if(t)try{await navigator.clipboard.writeText(t),this.showStatus(this.elements.outputStatus,"Output copied to clipboard!","success")}catch(e){const s=document.createElement("textarea");s.value=t,document.body.appendChild(s),s.select(),document.execCommand("copy"),document.body.removeChild(s),this.showStatus(this.elements.outputStatus,"Output copied to clipboard!","success")}else this.showStatus(this.elements.outputStatus,"No output to copy","error")}downloadOutput(){const t=this.outputEditor.getValue();if(!t)return void this.showStatus(this.elements.outputStatus,"No output to download","error");const e=`output.${{json:"json",text:"txt"}[this.currentOutputType]||"txt"}`,s=new Blob([t],{type:"text/plain"}),i=URL.createObjectURL(s),r=document.createElement("a");r.href=i,r.download=e,document.body.appendChild(r),r.click(),document.body.removeChild(r),URL.revokeObjectURL(i),this.showStatus(this.elements.outputStatus,`File downloaded as ${e}`,"success")}showStatus(t,e,s){t.innerHTML="",t.className=`status-inline ${s}`,"error"===s&&t.classList.add("collapsed");const i=document.createElement("span");i.className="error-content",i.textContent=e,t.appendChild(i)}toggleErrorExpansion(t){t.classList.contains("collapsed")?(t.classList.remove("collapsed"),t.classList.add("expanded")):t.classList.contains("expanded")&&(t.classList.remove("expanded"),t.classList.add("collapsed"))}clearStatus(){this.elements.inputStatus.textContent="",this.elements.inputStatus.className="status-inline",this.elements.outputStatus.textContent="",this.elements.outputStatus.className="status-inline"}displayOutput(t,e){this.outputEditor.setValue(t),this.outputEditor.setOption("mode",e)}}}}]);